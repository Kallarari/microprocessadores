/*
 * 03_main_ext_irq.c
 *
 *  Created on: Mar 12, 2020
 *      Author: Renan Augusto Starke
 *      Instituto Federal de Santa Catarina
 */

#include <msp430.h>

#include "lcd.h"
#include <stdio.h>

#define LED   BIT0
#define BUTTON_0  BIT1
#define LED1   BIT6
#define BUTTON_1  BIT3

void config_ext_irq(){
    /* Primeiramente configura porta:
     *
     * Cuidado quando há entrada e saídas
     *
     * Todos pinos como entrada  */
    P4DIR = 0x00;

    /* Pull up/down */
    P4REN = BUTTON_0;

    /* Pull up */
    P4OUT = BUTTON_0;

    /* Habilitação da IRQ apenas botão */
    P4IE =  BUTTON_0;

    /* Transição de nível alto para baixo */
    P4IES = BUTTON_0;

    /* Limpa alguma IRQ pendente */
    P4IFG &= ~BUTTON_0;

    /*c  *********outro botão ********* */

    P2DIR = 0x00;

    /* Pull up/down */
    P2REN = BUTTON_1;

    /* Pull up */
    P2OUT = BUTTON_1;

    /* Habilitação da IRQ apenas botão */
    P2IE =  BUTTON_1;

    /* Transição de nível alto para baixo */
    P2IES = BUTTON_1;

    /* Limpa alguma IRQ pendente */
    P2IFG &= ~BUTTON_1;
}

volatile uint8_t i = 0;
void main(){
    char string[8];
    WDTCTL = WDTPW | WDTHOLD;
#if defined (__MSP430FR2355__)
    PM5CTL0 &= ~LOCKLPM5;
#endif
    lcd_init_4bits();
    lcd_send_data(LCD_LINE_1+4, LCD_CMD);
    lcd_write_string("Minosso");
    _delay_cycles(100000);


    P1DIR = LED;
    config_ext_irq();
    __bis_SR_register(LPM4_bits | GIE);


    while (1){
        lcd_send_data(LCD_LINE_0, LCD_CMD);
        snprintf(string, 8, "%d", i);

        lcd_write_string(string);
        i++;

        _delay_cycles(100000);
    }
}


/* Port 4 ISR (interrupt service routine) */
#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
#endif

#pragma vector=PORT4_VECTOR
__interrupt void Port_4(void)
{
    P1OUT ^= LED;
    P4IFG &= ~BUTTON_0;
    i=0;
}


